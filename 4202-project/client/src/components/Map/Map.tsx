import React, { useEffect, useState } from "react";
import { LatLngExpression } from "leaflet";
import { MapContainer, TileLayer, Marker, Tooltip, Polyline, LayersControl, GeoJSON } from "react-leaflet";
import { connect } from "react-redux";
import { setPlacePreviewVisibility, setSelectedPlace } from "../../store/actions";
import { IState, Place } from "../../store/models";
import AddMarker from "./AddMarker";
import CyclingMap from "./CyclingMap";

import "./Map.css";

const Map = ({
  isVisible,
  places,
  selectedPlace,
  togglePreview,
  setPlaceForPreview,
}: any) => {
  const defaultPosition: LatLngExpression = [45.40226, -75.68882];; // Ottawa position

  const showPlace = (place: Place) => {
    setPlaceForPreview(place);
    togglePreview(true);
  };

  const Cycling : GeoJSON.FeatureCollection<any> = CyclingMap;

  const layerCenter: LatLngExpression = [45.40226, -75.68882];

  const pathArr : LatLngExpression[] = [
    [45.3487596, -75.7566543],
    [45.3487403, -75.7566382],
    [45.3487842, -75.7563921],
    [45.3488317, -75.7562756],
    [45.3491206, -75.7558753],
    [45.3493027, -75.7553545],
    [45.3494253, -75.7550485],
    [45.3495187, -75.7548127],
    [45.3497525, -75.7542253],
    [45.3502183, -75.753055],
    [45.3503464, -75.7531485],
    [45.35079, -75.7519957],
    [45.35099, -75.7514731],
    [45.3511874, -75.7509592],
    [45.3514257, -75.7508331],
    [45.3514438, -75.7508436],
    [45.3515504, -75.7504206],
    [45.3516503, -75.75032],
    [45.3516948, -75.7496086],
    [45.3522338, -75.7492572],
    [45.3535185, -75.7464829],
    [45.3544599, -75.7442442],
    [45.3554056, -75.7420205],
    [45.3563448, -75.7398254],
    [45.3568312, -75.7386919],
    [45.3574183, -75.7391838],
    [45.3576315, -75.7386716],
    [45.3579249, -75.7377613],
    [45.3579614, -75.7376039],
    [45.3585738, -75.7366276],
    [45.3587652, -75.7365022],
    [45.3589001, -75.7364517],
    [45.35903, -75.7363426],
    [45.3591873, -75.7362106],
    [45.3595272, -75.7359252],
    [45.3597164, -75.7357663],
    [45.3597517, -75.7357367],
    [45.3600326, -75.7355007],
    [45.36028, -75.7352897],
    [45.3604126, -75.7351817],
    [45.3604333, -75.7351643],
    [45.3605692, -75.7350526],
    [45.3610317, -75.7346566],
    [45.3618915, -75.7339189],
    [45.3619611, -75.7338597],
    [45.3624907, -75.7334505],
    [45.362608, -75.7333594],
    [45.3629768, -75.7330733],
    [45.3633851, -75.7327241],
    [45.3634484, -75.7326699],
    [45.3636426, -75.7325033],
    [45.3645011, -75.7313679],
    [45.3652735, -75.7307018],
    [45.3653848, -75.7307241],
    [45.3656757, -75.7308439],
    [45.3677706, -75.7315992],
    [45.3696313, -75.7318891],
    [45.3702487, -75.7319922],
    [45.3720107, -75.732297],
    [45.3734342, -75.7325134],
    [45.37384, -75.7325962],
    [45.3746104, -75.73276],
    [45.3747878, -75.7327955],
    [45.3753778, -75.7329225],
    [45.3758114, -75.7330051],
    [45.3763736, -75.7330736],
    [45.3769635, -75.7331372],
    [45.3771313, -75.7331553],
    [45.3772274, -75.733167],
    [45.3773478, -75.7331819],
    [45.3777035, -75.7332255],
    [45.3778462, -75.733263],
    [45.378056, -75.7333182],
    [45.3781596, -75.7333222],
    [45.3782845, -75.7333217],
    [45.3783682, -75.7333214],
    [45.3786542, -75.733321],
    [45.3790754, -75.7333253],
    [45.3792556, -75.7333261],
    [45.3795623, -75.7333102],
    [45.3797879, -75.7332905],
    [45.3799006, -75.7332807],
    [45.3800352, -75.733269],
    [45.3801858, -75.7332502],
    [45.3803255, -75.7332343],
    [45.3804386, -75.7332219],
    [45.380851, -75.7331767],
    [45.3811007, -75.7331486],
    [45.3811414, -75.7331445],
    [45.3813826, -75.73312],
    [45.3818531, -75.7330724],
    [45.3828392, -75.73286],
    [45.383326, -75.7327441],
    [45.3839017, -75.7326087],
    [45.3851019, -75.7323272],
    [45.3851518, -75.7323165],
    [45.3853453, -75.7322724],
    [45.3855455, -75.7322249],
    [45.3858355, -75.7321584],
    [45.3859779, -75.7320978],
    [45.3864731, -75.7319551],
    [45.3869946, -75.7318412],
    [45.3876056, -75.7304535],
    [45.387994, -75.7295632],
    [45.3881377, -75.7292343],
    [45.3883726, -75.7286965],
    [45.3884401, -75.7285445],
    [45.3886075, -75.7281652],
    [45.3887561, -75.7278285],
    [45.3890817, -75.7269809],
    [45.3891875, -75.7266521],
    [45.3892157, -75.7265614],
    [45.3894467, -75.7257499],
    [45.3907216, -75.7230445],
    [45.3916468, -75.7209404],
    [45.3926389, -75.718675],
    [45.3926545, -75.7186393],
    [45.3933613, -75.7170309],
    [45.3938939, -75.7158126],
    [45.395262, -75.712721],
    [45.3956096, -75.7119122],
    [45.396375, -75.7101845],
    [45.3966577, -75.7095148],
    [45.3974656, -75.7076436],
    [45.3990172, -75.7042296],
    [45.4005239, -75.7009256],
    [45.4007324, -75.7004571],
    [45.401027, -75.6996819],
    [45.4011169, -75.6993293],
    [45.4016851, -75.6979276],
    [45.4021785, -75.6967393],
    [45.4022432, -75.6965835],
    [45.4025743, -75.6958129],
    [45.4039332, -75.6925173],
    [45.4050391, -75.689867],
    [45.4051504, -75.6895933],
    [45.4055369, -75.6898193],
    [45.4058654, -75.6900096],
    [45.406578, -75.690416],
    [45.4069561, -75.6906088],
    [45.4073318, -75.6908363],
    [45.4085857, -75.687773],
    [45.4094132, -75.6857477],
    [45.4101248, -75.6840011],
    [45.410241, -75.6837228],
    [45.4102672, -75.6837466],
    [45.4102921, -75.6837692],
    [45.4112586, -75.6840152],
    [45.4114083, -75.6836654],
    [45.4117514, -75.682756],
    [45.4127016, -75.6801257],
    [45.4136275, -75.6806759],
    [45.4136807, -75.6807067],
    [45.4143515, -75.6811158],
    [45.4147893, -75.6802806],
    [45.4158197, -75.6796855],
    [45.4165619, -75.6792768],
    [45.4168676, -75.6789031],
    [45.4174373, -75.6783988],
    [45.4189616, -75.6773509],
    [45.4190197, -75.6771998],
    [45.4192272, -75.6766484],
    [45.4194039, -75.6763034],
    [45.4194826, -75.6761102],
    [45.4197098, -75.6755528],
    [45.4200065, -75.6748252],
    [45.4202894, -75.6741312],
    [45.4205082, -75.6735944],
    [45.4209268, -75.6725677],
    [45.4212341, -75.671833],
    [45.4213005, -75.6716901],
    [45.4216633, -75.6708415],
    [45.422017, -75.6699801],
    [45.4220652, -75.6698585],
    [45.4224129, -75.6691512],
    [45.422399, -75.6690387],
    [45.4224816, -75.6688134],
    [45.4259054, -75.6708698],
    [45.4267176, -75.6694896],
    [45.4268725, -75.6697686],
    [45.4292687, -75.6700156],
    [45.430316, -75.6700581],
    [45.4305657, -75.669534],
    [45.4306218, -75.6692976],
    [45.4307357, -75.6689991],
    [45.4317427, -75.6694098],
    [45.432925, -75.6699744],
    [45.4331206, -75.6692387],
    [45.433205, -75.6690161],
    [45.4333297, -75.6686935],
    [45.4334581, -75.6683592],
    [45.4334632, -75.6683457],
    [45.4335755, -75.6680503],
    [45.4338907, -75.6672571],
    [45.4340926, -75.666728],
    [45.434379, -75.6659787],
    [45.4344625, -75.6657739],
    [45.4345107, -75.6656573],
    [45.4346037, -75.6654118],
    [45.4347989, -75.6649126],
    [45.4349173, -75.6646118],
    [45.4349334, -75.6645711],
    [45.4350882, -75.6641796],
    [45.4352239, -75.6638387],
    [45.4353851, -75.6634087],
    [45.4355774, -75.6629121],
    [45.4356766, -75.6626558],
    [45.4357589, -75.6624411],
    [45.4360835, -75.6616107],
    [45.4361102, -75.6615423],
    [45.4362073, -75.6612852],
    [45.4364149, -75.6607621],
    [45.4364514, -75.6606701],
    [45.4366734, -75.6600906],
    [45.4367986, -75.659777],
    [45.4368519, -75.6596405],
    [45.4369778, -75.659318],
    [45.4372114, -75.6586814],
    [45.4373637, -75.6582388],
    [45.4374931, -75.6578409],
    [45.4375866, -75.6575593],
    [45.4377686, -75.6570058],
    [45.437815, -75.656862],
    [45.4380686, -75.6560475],
    [45.4381848, -75.6557035],
    [45.4383426, -75.6552399],
    [45.438589, -75.6545066],
    [45.4386575, -75.6543002],
    [45.4388926, -75.6536036],
    [45.4391182, -75.6529165],
    [45.4392946, -75.6523806],
    [45.4393754, -75.6521348],
    [45.4394782, -75.651815],
    [45.4395771, -75.6515101],
    [45.4396813, -75.6511905],
    [45.4397787, -75.6508917],
    [45.4398226, -75.650757],
    [45.4400654, -75.6500321],
    [45.4402992, -75.6493283],
    [45.440365, -75.6491238],
    [45.440616, -75.6483435],
    [45.4406779, -75.6481511],
    [45.4407353, -75.6478939],
    [45.4407662, -75.6477554],
    [45.4410249, -75.6468769],
    [45.4410708, -75.6467435],
    [45.4415232, -75.6455751],
    [45.4416356, -75.6452729],
    [45.4416923, -75.6450977],
    [45.4418058, -75.644756],
    [45.4419325, -75.6442431],
    [45.4419632, -75.6441393],
    [45.4422845, -75.6433012],
    [45.4423997, -75.6429546],
    [45.4424535, -75.6427892],
    [45.4425064, -75.6426486],
    [45.4425115, -75.6424678],
    [45.4426347, -75.6420778],
    [45.4427566, -75.6416883],
    [45.4430398, -75.640868],
    [45.4432403, -75.6403817],
    [45.4433761, -75.6399922],
    [45.4434176, -75.6398594],
    [45.443433, -75.639602],
    [45.4434623, -75.6395086],
    [45.443585, -75.6391247],
    [45.4436275, -75.6389959],
    [45.4438526, -75.6383177],
    [45.4440061, -75.6378509],
    [45.4441409, -75.6374308],
    [45.4442538, -75.6375166],
    [45.4446196, -75.6377529],
    [45.4448956, -75.6379376],
    [45.4446978, -75.6385307],
    [45.4448924, -75.6386526],
    [45.4450272, -75.6382152],
  ];



  return (
    <div className="map__container">
      <MapContainer
        center={defaultPosition}
        zoom={13}
        scrollWheelZoom={true}
        style={{ height: "100vh" }}
        zoomControl={true}
      >
        <LayersControl position="topright">
          <LayersControl.Overlay name="Cycling Network">
            <GeoJSON attribution="Ottawa" data={Cycling} />
          </LayersControl.Overlay>
          <LayersControl.Overlay name="Path">
            <Polyline positions={pathArr} color="red" />
          </LayersControl.Overlay>
        </LayersControl>
        <TileLayer
          attribution='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
          url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        />
        {places.map((place: Place) => (
          <Marker
            key={place.title}
            position={place.position}
            eventHandlers={{
              click: () => {
                // showPreview(place);
                console.log(CyclingMap);
              },
            }}
          >
            <Tooltip>{place.title}</Tooltip>
          </Marker>
        ))}
        <AddMarker />
      </MapContainer>
    </div>
  );
};

const mapStateToProps = (state: IState) => {
  const { places } = state;
  return {
    isVisible: places.placePreviewsIsVisible,
    places: places.places,
    selectedPlace: places.selectedPlace,
  };
};

const mapDispatchToProps = (dispatch: any) => {
  return {
    togglePreview: (payload: boolean) =>
      dispatch(setPlacePreviewVisibility(payload)),
    setPlaceForPreview: (payload: Place) =>
      dispatch(setSelectedPlace(payload)),
  };
};

export default connect(mapStateToProps, mapDispatchToProps)(Map);
